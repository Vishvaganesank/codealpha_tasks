package codealpha;

import java.util.ArrayList;
import java.util.Scanner;

public class StudentGradeTracker {
    private ArrayList<Integer> grades;

    public StudentGradeTracker() {
        grades = new ArrayList<>();
    }

    // Method to add a grade
    public void addGrade(int grade) {
        grades.add(grade);
    }

    // Method to remove a grade
    public void removeGrade(int grade) {
        if (grades.contains(grade)) {
            grades.remove(Integer.valueOf(grade));
            System.out.println("Grade removed successfully.");
        } else {
            System.out.println("Grade not found.");
        }
    }

    // Method to update a grade
    public void updateGrade(int oldGrade, int newGrade) {
        if (grades.contains(oldGrade)) {
            grades.set(grades.indexOf(oldGrade), newGrade);
            System.out.println("Grade updated successfully.");
        } else {
            System.out.println("Grade not found.");
        }
    }

    // Method to display all grades
    public void displayAllGrades() {
        if (grades.isEmpty()) {
            System.out.println("No grades available.");
        } else {
            System.out.println("All Grades: " + grades);
        }
    }

    // Method to clear all grades
    public void clearAllGrades() {
        grades.clear();
        System.out.println("All grades have been cleared.");
    }

    // Method to calculate average grade
    public double calculateAverage() {
        int sum = 0;
        for (int grade : grades) {
            sum += grade;
        }
        return grades.size() == 0 ? 0 : (double) sum / grades.size();
    }

    // Method to get the highest grade
    public int getHighestGrade() {
        int highest = Integer.MIN_VALUE;
        for (int grade : grades) {
            if (grade > highest) {
                highest = grade;
            }
        }
        return highest;
    }

    // Method to get the lowest grade
    public int getLowestGrade() {
        int lowest = Integer.MAX_VALUE;
        for (int grade : grades) {
            if (grade < lowest) {
                lowest = grade;
            }
        }
        return lowest;
    }

    // Method to print the summary of grades
    public void printGradeSummary() {
        if (grades.isEmpty()) {
            System.out.println("No grades available.");
            return;
        }
        System.out.println("Grade Summary:");
        System.out.println("Average Grade: " + calculateAverage());
        System.out.println("Highest Grade: " + getHighestGrade());
        System.out.println("Lowest Grade: " + getLowestGrade());
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StudentGradeTracker tracker = new StudentGradeTracker();

        System.out.println("Welcome to the Student Grade Tracker");

        while (true) {
            System.out.println("\nOptions:");
            System.out.println("1. Add Grade");
            System.out.println("2. Remove Grade");
            System.out.println("3. Update Grade");
            System.out.println("4. Display All Grades");
            System.out.println("5. Print Grade Summary");
            System.out.println("6. Clear All Grades");
            System.out.println("7. Exit");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    System.out.print("Enter the grade to add: ");
                    int gradeToAdd = scanner.nextInt();
                    tracker.addGrade(gradeToAdd);
                    break;
                case 2:
                    System.out.print("Enter the grade to remove: ");
                    int gradeToRemove = scanner.nextInt();
                    tracker.removeGrade(gradeToRemove);
                    break;
                case 3:
                    System.out.print("Enter the grade to update: ");
                    int oldGrade = scanner.nextInt();
                    System.out.print("Enter the new grade: ");
                    int newGrade = scanner.nextInt();
                    tracker.updateGrade(oldGrade, newGrade);
                    break;
                case 4:
                    tracker.displayAllGrades();
                    break;
                case 5:
                    tracker.printGradeSummary();
                    break;
                case 6:
                    tracker.clearAllGrades();
                    break;
                case 7:
                    System.out.println("Exiting the Student Grade Tracker. Goodbye!");
                    return;
                default:
                    System.out.println("Invalid option. Please choose again.");
            }
        }
    }
}
